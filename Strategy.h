/*********************************************************	Strategy.h : 策略接口文件                           **	张永锋                                              **	zhangyf07@gmail.com                                 **	2014.5                                              **********************************************************/#ifndef STRATEGY_H_#define	STRATEGY_H_#include "Point.h"#include <vector>extern "C" Point* getPoint(const int M, const int N, const int* top, const int* _board, 	const int lastX, const int lastY, const int noX, const int noY);extern "C" void clearPoint(Point* p);void clearArray(int M, int N, int** board);/*	添加你自己的辅助函数*/struct State {    Point action;    bool machineTurn;    int** board;};struct Node {    Node* parent;    std::vector<Node*> children;    State state;        Node(Node* parent=nullptr, State state=State()) {        this->parent = parent;        this->state = state;    }};Point uctSearch(State s);Node* treePolicy(Node* v);Node* expand(Node* v);Node* bestChild(Node* v, double c);double defaultPolicy(State s);void backup(Node* v, double delta);#endif